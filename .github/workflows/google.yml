# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow :  
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches: [ "staging" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-central1
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: gke-test
  REPOSITORY: docker-repository
  IMAGE: geppetto

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configurar gcloud CLI
    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        service_account_key: '${{ secrets.GCLOUD_KEY_JSON }}'

    # Verificar que el archivo de credenciales existe y es vÃ¡lido
    - name: Write credentials file
      run: echo "${{ secrets.GCLOUD_KEY_JSON }}" > $HOME/gcloud-key.json

    - name: Verify credentials file content
      run: |
        echo "Contents of gcloud-key.json:"
        cat $HOME/gcloud-key.json
      shell: bash
      

    # Autenticar gcloud
    - name: Authenticate to gcloud
      run: gcloud auth activate-service-account --key-file=$HOME/gcloud-key.json

    # Autenticar en Google Cloud
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCLOUD_KEY_JSON }}'

    - name: Docker configuration
      env: 
        ACCESS_TOKEN: ${{ steps.auth.outputs.access_token }}
      run: echo $ACCESS_TOKEN | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev  

    - name: Log access token        
      run: echo "Access Token:${{ steps.auth.outputs.access_token }}"

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with: 
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Build
      run: |
          docker build \
            --tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}" \
            --build-arg GITHUB_SHA="${{ github.sha }}" \
            --build-arg GITHUB_REF="${{ github.ref }}" \
            .

    - name: Publish
      run: |
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}"

    - name: Set up Kustomize
      run: |
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

    - name: Deploy
      run: |
          ./kustomize edit set image ${ env.GAR_LOCATION }-docker.pkg.dev/${ env.PROJECT_ID }/${ env.REPOSITORY }/${ env.IMAGE }:${ github.sha }
          ./kustomize build . | kubectl apply -f -
